defaults:
  - _self_
  - task: can_image

name: train_action_chunk_transformer
_target_: diffusion_policy.workspace.train_action_chunk_transformer_workspace.TrainActionChunkTransformerWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

horizon: 10
n_obs_steps: 1
n_action_steps: 10
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
past_action_visible: False
keypoint_visible_rate: 1.0
obs_as_cond: True

policy:
  _target_: diffusion_policy.policy.action_chunk_transformer_policy.ActionChunkTransformerPolicy

  joiner:
    _target_: diffusion_policy.model.ACT.backbone.Joiner
    backbone:
      _target_: diffusion_policy.model.ACT.backbone.Backbone
      name: resnet18
      train_backbone: True
      return_interm_layers: False
      dilation:  False
    position_embedding:
      _target_: diffusion_policy.model.ACT.position_encoding.PositionEmbeddingSine
      num_pos_feats: ${eval:'${policy.transformer.d_model} // 2'}
      temperature: 10000
      normalize: False
      scale: null

  transformer:
    _target_: diffusion_policy.model.ACT.transformer.Transformer
    d_model: 512
    nhead: 8
    num_encoder_layers: 6
    num_decoder_layers: 6
    dim_feedfowrard: 2048
    dropout: 0.1
    activation: relu
    normalize_before: False
    return_intermediate_dec: False
  trans_encoder_layer:
    _target_: diffusion_policy.model.ACT.transformer.TransformerEncoderLayer
    d_model: 512
    nhead: 8
    dim_feedforward: 2048
    dropout: 0.1
    activation: relu
    normalize_before: False
  
  state_dim: 7
  num_queries: 10
  camera_names: ["agentview_image", "robot0_eye_in_hand_image"]
  num_encoder_layers: 4
  
  kl_weight: 10
  temporal_agg: True
  shape_meta: ${shape_meta}


training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  # optimization
  lr_scheduler: cosine
  # Transformer needs lr wormup
  lr_warmup_steps: 10
  num_epochs: 100
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: True
  # training loop control
  # in epcoch
  rollout_every: 10
  checkpoint_every: 10
  val_every: 1
  sample_every: 10
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

optimizer:
  weight_decay: 1.0e-4
  learning_rate: 1.0e-4
  lr_backbone: 1.0e-5

dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: False
  pin_memory: True
  persistent_workers: False

logging:
  project: ACT_policy_debug
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}