defaults:
  - _self_
  - task: square_image
  - override hydra/job_logging: colorlog
  - override hydra/hydra_logging: colorlog

name: train_torch_model_policy_workspace
_target_: diffusion_policy.workspace.train_torch_model_workspace.TrainTransformerForOursWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

horizon: 10
n_obs_steps: 2
n_action_steps: 8
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
past_action_visible: False
cam_num: 2

policy:
  _target_: diffusion_policy.policy.torch_model_policy.Torch_Model_Policy

  shape_meta: ${shape_meta}

  # discretizer
  discretizer:
    _target_: diffusion_policy.model.our_model.discretizer.k_means.KMeansDiscretizer

    feature_dim: ${eval:'${policy.ViE.projection_size} * ${n_obs_steps} * ${cam_num}'} # fea_dim * T * cam_num
    num_bins: 10
    n_iter: 100
    predict_offsets: False
  kmeans_class: ${policy.discretizer.num_bins}

  # task params
  horizon: ${horizon}
  n_action_steps: ${n_action_steps}
  n_obs_steps: ${n_obs_steps}

  # image
  crop_shape: [76, 76]

  # visual encoder
  ViE:
    _target_: diffusion_policy.model.our_model.byol.byol.VisualEncoder

    n_obs_steps: ${n_obs_steps}
    image_size: 76
    hidden_layer: 'avgpool'
    projection_size: 256
    projection_hidden_size: 4096
    moving_average_decay: 0.99
    use_momentum: True
    pretrain: True
  ViE_path: data/outputs/2023.09.28/10.49.52_square_image_square/checkpoints/latest.ckpt

  # model arch
  fea_dim: ${policy.ViE.projection_size}
  latent_dim: 32
  n_cvae_layer: 4
  n_cond_layer: 6
  n_layer: 6
  n_head: 8
  n_emb: 512
  p_drop_emb: 0.0
  p_drop_attn: 0.3
  causal_attn: True

  # others
  kl_weights: 10
  temporal_agg: False

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  # optimization
  lr_scheduler: cosine
  # transformer needs lr warmup
  lr_warmup_steps: 10
  num_epochs: 100
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: True
  # training loop control
  # in epcoch
  rollout_every: 10
  checkpoint_every: 10
  val_every: 1
  sample_every: 10
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

optimizer:
  weight_decay: 1.0e-4
  learning_rate: 1.0e-4
  betas: [0.9, 0.95]

dataloader:
  batch_size: 32
  num_workers: 8
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 32
  num_workers: 8
  shuffle: False
  pin_memory: True
  persistent_workers: False

logging:
  project: train_torch_model_policy
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}_add_class_info
  tags: ["${task_name}", "${name}"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}